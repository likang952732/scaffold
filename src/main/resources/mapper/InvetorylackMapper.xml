<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wwinfo.mapper.InvetorylackMapper">

    <insert id="addBatch" parameterType="list">
        INSERT INTO invetoryLack(
            taskID,
            assetID,
            shouldRoomID,
            resultCheck
        ) VALUES
        <foreach collection ="lackList" item="item" index= "index" separator =",">
            (
                #{item.taskID,jdbcType=BIGINT},
                #{item.assetID, jdbcType=BIGINT},
                #{item.shouldRoomID, jdbcType=BIGINT},
                #{item.resultCheck, jdbcType=BIGINT}
            )
        </foreach >

    </insert>

    <select id="page" parameterType="com.wwinfo.pojo.query.InvetorylackQuery" resultType="com.wwinfo.pojo.res.InvetorylackRes">
        select
            lack.taskID,
            lack.assetID,
            lack.shouldRoomID,
            lack.resultCheck,
            org.orgName,
            ast.name AS "assetName"
        FROM
        (
        SELECT
        au.orgID,au.orgName
        FROM
        (
        SELECT
        *
        FROM
        organize
        WHERE
        upOrgID IS NOT NULL
        ) au,
        (SELECT @pid := #{query.orgID}) pd
        WHERE
        FIND_IN_SET(upOrgID, @pid) > 0
        AND @pid := concat(@pid, ',', orgID)
        UNION
        SELECT
        orgID, orgName
        FROM
        organize
        WHERE
        orgID = #{query.orgID}
        ) T
        JOIN asset ast ON lack.assetID = ast.ID
        JOIN invetoryLack lack asset ast ON lack.assetID = ast.ID
        where 1 = 1
            <if test="query.resultCheck != null">
                AND lack.resultCheck = #{query.resultCheck}
            </if>
    </select>

    <select id="getInvetoryInfoByTaskId" resultType="java.util.Map" parameterType="java.lang.Long">
       select
           ilk.taskID,
           ilk.assetID,
           ilk.resultCheck,
           ilk.shouldRoomID AS "roomID",
           ast.name AS "assetName",
           ast.assetNo,
           rm.roomName,
           org.orgName
       from invetoryLack ilk
       left join asset ast ON ilk.assetID = ast.ID
       left join room rm ON ilk.shouldRoomID = rm.ID
       left join organize org ON ast.orgID = org.orgID
       where ilk.taskID = #{taskID}
    </select>

</mapper>
