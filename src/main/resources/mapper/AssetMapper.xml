<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wwinfo.mapper.AssetMapper">
    <resultMap id="apiMap" type="com.wwinfo.pojo.res.AssetApiRes">
        <result property="ID" column="ID" />
        <result property="orgID" column="orgID" />
        <result property="name" column="name" />
        <result property="assetNo" column="assetNo" />
        <result property="brand" column="brand" />
        <result property="model" column="model" />
        <result property="remark" column="remark" />
        <result property="orgName" column="orgName" />
        <collection property="rfids" column="ID" select="getRFIDIds" ofType="list" />
    </resultMap>

    <sql id="baseSql">
        ast.ID,
        ast.orgID,
        ast.name,
        ast.assetNo,
        ast.useOrg,
        ast.secLevel,
        ast.largeClass,
        ast.littleClass,
        ast.brand,
        ast.model,
        ast.serialNo,
        ast.description,
        ast.price,
        ast.setDate,
        ast.staff,
        ast.period,
        ast.remark,
        ast.roomID,
        ast.posAlarmType,
        ast.curStatus,
        ast.timeStatus,
        ast.isAbnormal,
        ast.reasonType,
        ast.lendStatus,
        ast.lendStart,
        ast.lendEnd,
        ast.timeAdd,
        ast.timeModify,
        ast.delStatus,
        ast.delTime,
        ast.delReason,
        ast.isBlack,
        ast.blackReason,
        ast.blackTime
    </sql>

    <select id="page" parameterType="com.wwinfo.pojo.query.AssetQuery" resultType="com.wwinfo.pojo.res.AssetRes">
        SELECT
           <include refid="baseSql" />,
           org.orgName
        FROM asset ast
        LEFT JOIN organize org ON ast.orgID = org.orgID
        <where>
            <if test="assetQuery.name != null and assetQuery.name != ''">
                AND ast.name LIKE CONCAT( #{assetQuery.name ,jdbcType=VARCHAR}, '%')
            </if>
            <if test="assetQuery.assetNo != null and assetQuery.assetNo != ''">
                AND ast.assetNo = #{assetQuery.assetNo}
            </if>
            <if test="assetQuery.curStatus != null">
                AND ast.curStatus = #{assetQuery.curStatus}
            </if>
            <if test="assetQuery.isAbnormal != null">
                AND ast.isAbnormal = #{assetQuery.isAbnormal}
            </if>
            <if test="assetQuery.lendStatus != null">
                AND ast.lendStatus = #{assetQuery.lendStatus}
            </if>
            <if test="assetQuery.delStatus != null">
                AND ast.delStatus = #{assetQuery.delStatus}
            </if>
            <if test="assetQuery.isBlack != null">
                AND ast.isBlack = #{assetQuery.isBlack}
            </if>
            <if test="assetQuery.orgID != null">
                AND ast.orgID = #{assetQuery.orgID}
            </if>
        </where>
    </select>


    <select id="getAssetListByOrgs" parameterType="list" resultType="com.wwinfo.pojo.res.AssetApiRes">
        SELECT
           ast.ID,
           ast.orgID,
           ast.name,
           ast.assetNo,
           ast.brand,
           ast.model,
           ast.remark,
           org.orgName
        FROM asset ast
        LEFT JOIN organize org ON ast.orgID = org.orgID
        WHERE ast.orgID IN
        <foreach item="item" index="index" collection="orgs" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getRFIDIds" resultType="java.lang.String">
       SELECT rfid_real_no FROM rfid_asset WHERE assetID = #{ID}
    </select>

    <select id="getExportListByParam" resultType="com.wwinfo.pojo.bo.AssetStatusExcel" parameterType="map">
        SELECT
            <include refid="baseSql" />,
            org.orgName
        FROM asset ast
        LEFT JOIN organize org ON ast.orgID = org.orgID
        <where>
            <if test="map.name != null and map.name != ''">
                AND ast.name LIKE CONCAT( #{assetQuery.name ,jdbcType=VARCHAR}, '%')
            </if>
            <if test="map.assetNo != null and map.assetNo != ''">
                AND ast.assetNo = #{assetQuery.assetNo ,jdbcType=VARCHAR}
            </if>
            <if test="map.startDate != null and map.startDate != ''">
                <![CDATA[ AND DATE(ast.timeAdd) >= #{map.startDate} ]]>
            </if>
            <if test="map.endDate != null and map.endDate != ''">
                <![CDATA[ AND DATE(ast.timeAdd) <= #{map.endDate} ]]>
            </if>
        </where>
    </select>

    <select id="checkRepeat" parameterType="list" resultType="com.wwinfo.model.Asset">
        select
           ID
        from asset
        WHERE
        <foreach collection="assetList" item="item" open="(" close=")" separator="or">
            (
            name = #{item.name,jdbcType=VARCHAR}
            OR assetNo = #{item.assetNo,jdbcType=VARCHAR}
            )
        </foreach>

    </select>

    <select id="getAssetListByIDs" resultType="com.wwinfo.pojo.res.AssetRes" parameterType="long">
        SELECT
            <include refid="baseSql" />,
            task.ID AS "taskID",
            task.status AS "taskStatus"
        FROM asset ast
        LEFT JOIN organize org ON ast.orgID = org.orgID
        LEFT JOIN invetoryTask task ON org.orgID = task.orgID
        WHERE ast.ID IN
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getAllRFIDRecord" resultType="java.util.HashMap">
        SELECT
           <include refid="baseSql" />,
           rfr.rfidNo AS "rfidNo",
           rfr.timeAdd AS "rfrtimeAdd"
           rrea.readerName AS "readerName"
        FROM asset ast
        JOIN rfid_asset ra ON ast.ID = ra.assetID
        JOIN rfidRecord rfr ON ra.rfid_real_no = rfr.rfidNo
        JOIN rfidReader rrea ON rfr.readerID = rrea.ID
        ORDER BY rfr.timeAdd DESC
    </select>

    <select id="getAssetByMap" resultType="java.util.HashMap" parameterType="map">
        SELECT
            <include refid="baseSql" />
        FROM asset ast
        where ast.isAbnormal = #{map.isAbnormal}
        <![CDATA[ AND DATE(ast.timeStatus) <= #{param.endDate,jdbcType=VARCHAR} ]]>
    </select>

    <update id="updateBatchByParam">
        UPDATE asset
        <set>
            <if test="map.roomID!= null">
                roomID = #{map.roomID},
            </if>
            <if test="map.delStatus!= null">
                delStatus = #{map.delStatus},
            </if>
            <if test="map.delReason!= null and map.delReason != ''">
                delReason = #{map.delReason},
            </if>
            <if test="map.isBlack!= null  ">
                isBlack = #{map.isBlack},
            </if>
            <if test="map.blackReason!= null and map.blackReason != ''">
                blackReason = #{map.blackReason},
            </if>
            <if test="map.blackTime!= null  ">
                blackTime = #{map.blackTime},
            </if>
        </set>
        WHERE ID IN
        <foreach collection="idList" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="updateBatchMap" parameterType="list">
        update asset
        set roomID =
        <foreach collection="list" item="item" index="index"
                 separator=" " open="case" close="end">
            when ID = #{item.assetID} then #{item.roomID}
        </foreach>
        where assetID IN
        <foreach collection="list" index="index" item="item"
                 separator="," open="(" close=")">
            #{item.assetID,jdbcType=BIGINT}
        </foreach>
    </update>

    <insert id="addBatch" parameterType="list">
        INSERT INTO asset(
            orgID,
            name,
            assetNo,
            useOrg,
            secLevel,
            largeClass,
            littleClass,
            brand,
            model,
            serialNo,
            description,
            price,
            setDate,
            staff,
            period,
            remark,
            roomID,
            posAlarmType,
            curStatus,
            timeStatus
        ) VALUES
        <foreach collection ="list" item="item" index= "index" separator =",">
            (
            #{item.orgID, jdbcType=BIGINT},
            #{item.name, jdbcType=VARCHAR},
            #{item.assetNo,jdbcType=VARCHAR},
            #{item.useOrg,jdbcType=BIGINT},
            #{item.secLevel,jdbcType=VARCHAR},
            #{item.largeClass,jdbcType=VARCHAR},
            #{item.littleClass,jdbcType=VARCHAR},
            #{item.brand,jdbcType=VARCHAR},
            #{item.model,jdbcType=VARCHAR},
            #{item.serialNo,jdbcType=VARCHAR},
            #{item.description,jdbcType=VARCHAR},
            #{item.price},
            #{item.setDate},
            #{item.staff,jdbcType=VARCHAR},
            #{item.period,jdbcType=VARCHAR},
            #{item.remark,jdbcType=VARCHAR},
            #{item.roomID,jdbcType=BIGINT},
            #{item.posAlarmType,jdbcType=BIGINT},
            #{item.curStatus,jdbcType=BIGINT},
            #{item.timeStatus}
            )
        </foreach >
    </insert>

</mapper>